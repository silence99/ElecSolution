<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Emergence_WPF.style"
                    xmlns:chart="clr-namespace:Emergence_WPF.Comm">
    <!-- base label -->
    <Style TargetType="Label">
        <Setter Property="FontFamily" Value="PingFang-SC-Medium"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Padding" Value="25"/>
    </Style>
    <Style TargetType="Label" x:Key="SelectedLabel">
        <Setter Property="FontFamily" Value="PingFang-SC-Medium"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Background" Value="#005651"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Padding" Value="25"/>
    </Style>
    <!-- Round conner button -->
    <Style TargetType="Button" x:Key="RoundConnerButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="0" CornerRadius="10,10,10,10" Background="{TemplateBinding Background}">
                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" ></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" x:Key="RoundConnerGridOperationButtonStyle" BasedOn="{StaticResource RoundConnerButtonStyle}">
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="Width" Value="150px"/>
        <Setter Property="Height" Value="36px"/>
        <Setter Property="Background" Value="#006f69"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!--Search button with icon style-->
    <Style  x:Key="TextBoxSearchStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Width" Value="280"/>
        <Setter Property="Height" Value="41"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border BorderBrush="#AAAAAA" BorderThickness="1px">
                        <Grid Background="White">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition  Width="40"/>
                            </Grid.ColumnDefinitions>
                            <TextBox Grid.Column="0" Text="{TemplateBinding Text}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            <Image Grid.Column="1" Width="30" Height="30" Source="/Image/Common/Icon_Search.png"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="chart:WheelChart">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="chart:WheelChart">
                    <Grid>
                        <Path Fill="{TemplateBinding SectorColor}">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="{Binding Path=Center, RelativeSource={RelativeSource TemplatedParent}}" IsClosed="True">
                                        <LineSegment Point="{Binding Path=ArcStart, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <ArcSegment Size="{Binding Path=ArcSize, RelativeSource={RelativeSource TemplatedParent}}" Point="{Binding Path=ArcEnd, RelativeSource={RelativeSource TemplatedParent}}" SweepDirection="{Binding Path=SweepDirection, RelativeSource={RelativeSource TemplatedParent}}" IsLargeArc="{Binding Path=IsLargeArc, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                        <Path Fill="{TemplateBinding RestSectorColor}">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="{Binding Path=Center, RelativeSource={RelativeSource TemplatedParent}}" IsClosed="True">
                                        <LineSegment Point="{Binding Path=ArcEnd, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <ArcSegment Size="{Binding Path=ArcSize, RelativeSource={RelativeSource TemplatedParent}}" Point="{Binding Path=ArcStart, RelativeSource={RelativeSource TemplatedParent}}" SweepDirection="{Binding Path=SweepDirection, RelativeSource={RelativeSource TemplatedParent}}" IsLargeArc="{Binding Path=IsRestArcLarge, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                        <Ellipse Fill="{TemplateBinding InnerCircleColor}" Width="{TemplateBinding InnerDiameter}" Height="{TemplateBinding InnerDiameter}"/>
                        <Label Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="16" Foreground="{TemplateBinding Foreground}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DataGrid">
        <!--网格线颜色-->
        <Setter Property="CanUserResizeColumns" Value="false"/>
        <Setter Property="Background" Value="#000000" />
        <Setter Property="BorderBrush" Value="#FFFFFF" />
        <Setter Property="HorizontalGridLinesBrush">
            <Setter.Value>
                <SolidColorBrush Color="#000000"/>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalGridLinesBrush">
            <Setter.Value>
                <SolidColorBrush Color="#000000"/>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="DataGridColumnHeader">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="60" />
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Border x:Name="BackgroundBorder" BorderThickness="0,1,0,1"
                             BorderBrush="#000000"
                              Width="Auto">
                        <Grid Background="#006F69">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter  Margin="0,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <Path x:Name="SortArrow" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill"  Grid.Column="2" Width="8" Height="6" Margin="0,0,5,0"
                            VerticalAlignment="Center" RenderTransformOrigin="1,1" />
                            <Rectangle Width="1" Fill="#FFFFFF" HorizontalAlignment="Right" Grid.ColumnSpan="1" />
                        </Grid>
                    </Border>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
        <Setter Property="MinHeight" Value="40"/>
    </Style>
    <!--行样式触发-->
    <!--背景色改变必须先设置cellStyle 因为cellStyle会覆盖rowStyle样式-->
    <Style  TargetType="DataGridRow">
        <Setter Property="Background" Value="#F3F3F3" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Height" Value="auto"/>
        <Setter Property="Foreground" Value="#000000" />
        <Style.Triggers>
            <!--隔行换色-->
            <Trigger Property="AlternationIndex" Value="0" >
                <Setter Property="Background" Value="#FFFFFF" />
            </Trigger>
            <Trigger Property="AlternationIndex" Value="1" >
                <Setter Property="Background" Value="#F0F0F0" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#E0E0E0"/>
                <Setter Property="Foreground" Value="#000000" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#E6E6E6"/>
                <Setter Property="Foreground" Value="#000000" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--单元格样式触发-->
    <Style TargetType="DataGridCell">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <TextBlock TextAlignment="Center" VerticalAlignment="Center"  >
                           <ContentPresenter />
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#E6E6E6"/>
                <Setter Property="Foreground" Value="#000000" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="Grid_WithOutHeader_Black" TargetType="DataGrid">
        <!--grid right column data grid line style-->
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="AlternationCount" Value="1"/>
        <Setter Property="AutoGenerateColumns" Value="false"/>
        <Setter Property="CanUserResizeColumns" Value="false"/>
        <Setter Property="CanUserSortColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="IsReadOnly" Value="False"/>
        <Setter Property="HeadersVisibility" Value="None"/>
        <Setter Property="Background" Value="#242424" />
        <Setter Property="Margin" Value="1"/>
        <Setter Property="BorderBrush" Value="#AAAAAA"/>
        <Setter Property="BorderThickness" Value="0 1 0 1"/>
        <Setter Property="VerticalGridLinesBrush" Value="#242424" />
        <Setter Property="HorizontalGridLinesBrush">
            <Setter.Value>
                <SolidColorBrush Color="#AAAAAA"/>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <!--单元格样式触发-->
            <Style TargetType="DataGridCell">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="DataGridCell">
                            <TextBlock TextAlignment="Left" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5 0 0 0">
                                    <ContentPresenter />
                            </TextBlock>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="#242424"/>
                        <Setter Property="Foreground" Value="#FFFFFF" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!--行样式触发-->
            <!--背景色改变必须先设置cellStyle 因为cellStyle会覆盖rowStyle样式-->
            <Style TargetType="DataGridRow">
                <Setter Property="Background" Value="#242424" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="Height" Value="auto"/>
                <Setter Property="Foreground" Value="#FFFFFF" />
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="Grid_ForVedio_Black" TargetType="DataGrid">
        <!--grid right column data grid line style-->
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="AlternationCount" Value="1"/>
        <Setter Property="AutoGenerateColumns" Value="false"/>
        <Setter Property="CanUserResizeColumns" Value="false"/>
        <Setter Property="CanUserSortColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="IsReadOnly" Value="False"/>
        <Setter Property="HeadersVisibility" Value="None"/>
        <Setter Property="Background" Value="#242424" />
        <Setter Property="Margin" Value="1"/>
        <Setter Property="BorderBrush" Value="#AAAAAA"/>
        <Setter Property="BorderThickness" Value="0 1 0 1"/>
        <Setter Property="VerticalGridLinesBrush" Value="#242424" />
        <Setter Property="Margin" Value="5 5 5 10"/>
    </Style>
    <ControlTemplate x:Key="ErrorTempalte">
        <StackPanel Orientation="Horizontal">
            <StackPanel.Triggers>
                <EventTrigger RoutedEvent="FrameworkElement.Loaded" SourceName="bd">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="bd" Storyboard.TargetProperty="RenderTransform.ScaleX" From="0" To="1" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </StackPanel.Triggers>
            <AdornedElementPlaceholder/>
            <Border CornerRadius="3" BorderBrush="DarkMagenta" Background="#AAFF0000" BorderThickness="1" Padding="5 2" x:Name="bd">
                <Border.RenderTransform>
                    <ScaleTransform/>
                </Border.RenderTransform>
                <TextBlock Foreground="White" VerticalAlignment="Center" Text="{Binding Path=/ErrorContent}"/>
            </Border>
        </StackPanel>
    </ControlTemplate>
    <SolidColorBrush Color="#000000" Opacity="0.5" x:Key="OpacityBrush"/>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle x:Name="recThumb"  Fill="{TemplateBinding BorderBrush}" RadiusX="3"  RadiusY="3" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter Property="Fill" TargetName="recThumb" Value="#606060"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Opacity" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Opacity" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="for_scrollbar"  
           TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="0,1,0,6"/>
        <Setter Property="Width" Value="10"/>
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="Opacity" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Track x:Name="PART_Track"   IsEnabled="{TemplateBinding IsMouseOver}" IsDirectionReversed="true">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}" Command="{x:Static ScrollBar.PageUpCommand}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}" Command="{x:Static ScrollBar.PageDownCommand}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}"/>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Margin" Value="1,0,6,0"/>
                <Setter Property="Height" Value="10"/>
                <Setter Property="MinHeight" Value="10"/>
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Opacity" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}" Command="{x:Static ScrollBar.PageLeftCommand}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"  Command="{x:Static ScrollBar.PageRightCommand}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- ScrollViewer -->
    <Style TargetType="{x:Type ScrollViewer}" x:Key="ScrollViewerHiddenScrollBar">
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="BorderThickness"  Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="HorizontalScrollBarVisibility"  Value="Auto"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"  
                           BorderThickness="{TemplateBinding BorderThickness}"  
                           SnapsToDevicePixels="True">
                        <Grid Background="{TemplateBinding Background}">
                            <ScrollContentPresenter  
                               Cursor="{TemplateBinding Cursor}"  
                               Margin="{TemplateBinding Padding}"  
                               ContentTemplate="{TemplateBinding ContentTemplate}"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar"  
                                      Opacity="1"  
                                      HorizontalAlignment="Right"  
                                      Maximum="{TemplateBinding ScrollableHeight}"  
                                      Orientation="Vertical"  
                                      Style="{StaticResource for_scrollbar}"  
                                      ViewportSize="{TemplateBinding ViewportHeight}"  
                                      Value="{TemplateBinding VerticalOffset}"  
                                      Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"  
                                      Width="10"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar"  
                                      Opacity="1"  
                                      Maximum="{TemplateBinding ScrollableWidth}"  
                                      Orientation="Horizontal"  
                                      Style="{StaticResource for_scrollbar}"  
                                      VerticalAlignment="Bottom"  
                                      Value="{TemplateBinding HorizontalOffset}"  
                                      ViewportSize="{TemplateBinding ViewportWidth}"  
                                      Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"  
                                      Height="10"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ScrollChanged">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation    
                                       Storyboard.TargetName="PART_VerticalScrollBar"    
                                       Storyboard.TargetProperty="Opacity"    
                                       To="1"    
                                       Duration="0:0:1"/>
                                    <DoubleAnimation    
                                       Storyboard.TargetName="PART_VerticalScrollBar"    
                                       Storyboard.TargetProperty="Opacity"    
                                       To="0"    
                                       Duration="0:0:1"    
                                       BeginTime="0:0:1"/>
                                    <!--<DoubleAnimation    
                                       Storyboard.TargetName="PART_HorizontalScrollBar"    
                                       Storyboard.TargetProperty="Opacity"    
                                       To="1"    
                                       Duration="0:0:1"/>  
                                   <DoubleAnimation    
                                       Storyboard.TargetName="PART_HorizontalScrollBar"    
                                       Storyboard.TargetProperty="Opacity"    
                                       To="0"    
                                       Duration="0:0:1"    
                                       BeginTime="0:0:1"/>-->
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseEnter"    
                                     SourceName="PART_VerticalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation    
                                       Storyboard.TargetName="PART_VerticalScrollBar"    
                                       Storyboard.TargetProperty="Opacity"    
                                       To="1"    
                                       Duration="0:0:1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave"    
                                     SourceName="PART_VerticalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation    
                                       Storyboard.TargetName="PART_VerticalScrollBar"    
                                       Storyboard.TargetProperty="Opacity"    
                                       To="0"    
                                       Duration="0:0:1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>