<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
   >

    <Style TargetType="ListBoxItem"  x:Key="ListBoxStyle" >
        <!-- 设置控件模板 -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                 TextBlock.Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- 设置触发器 -->
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"></Condition>
                    <Condition Property="IsSelected" Value="false"></Condition>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="#e6e6e6"></Setter>
                </MultiTrigger.Setters>
            </MultiTrigger>

            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="#c8c8c8"/>
                <!--<Setter Property="Foreground" Value="Red"/>-->
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ListBoxItem"  x:Key="ListBoxStyle1" >
        <!-- 设置控件模板 -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                 TextBlock.Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- 设置触发器 -->
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"></Condition>
                    <Condition Property="IsSelected" Value="false"></Condition>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <!--<Setter Property="Background" Value="#e6e6e6"></Setter>-->
                </MultiTrigger.Setters>
            </MultiTrigger>

            <Trigger Property="IsSelected" Value="true">
                <!--<Setter Property="Background" Value="#c8c8c8"/>-->
                <!--<Setter Property="Foreground" Value="Red"/>-->
            </Trigger>
        </Style.Triggers>
    </Style>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    <Style x:Key="st" TargetType="GridViewColumnHeader">
        <Setter Property="Background" Value="#E3F8F1"></Setter>
       
        <Style.Triggers>
            <!--<Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <GradientStop Color="White" Offset="0"/>
                        <GradientStop Color="Orange" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"></Condition>
                   
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="#e6e6e6"></Setter>
                </MultiTrigger.Setters>
            </MultiTrigger>

          
        </Style.Triggers>
    </Style>
    <Style TargetType="ListBoxItem"  x:Key="ListBoxStyle2" >
        
        <!-- 设置控件模板 -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                 TextBlock.Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- 设置触发器 -->
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"></Condition>
                    <Condition Property="IsSelected" Value="false"></Condition>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <!--<Setter Property="Background" Value="#e6e6e6"></Setter>-->
                </MultiTrigger.Setters>
            </MultiTrigger>

            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="#e3e7f1"/>
                <!--<Setter Property="Foreground" Value="Red"/>-->
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="ListBoxItem"  x:Key="ListBoxStyle3" >

        <!-- 设置控件模板 -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                 TextBlock.Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- 设置触发器 -->
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"></Condition>
                    <Condition Property="IsSelected" Value="false"></Condition>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <!--<Setter Property="Background" Value="#e6e6e6"></Setter>-->
                </MultiTrigger.Setters>
            </MultiTrigger>

            <Trigger Property="IsFocused" Value="true">
                <Setter Property="Background" Value="#e3e7f1"/>
                <!--<Setter Property="Foreground" Value="Red"/>-->
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="MyContextMenu" TargetType="{x:Type ContextMenu}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border" CornerRadius="2"
                Background="#B2B8C6" BorderThickness="1" BorderBrush="#CCE0F8"
               >
                      
                        <StackPanel IsItemsHost="True"
                      KeyboardNavigation.DirectionalNavigation="Cycle" />
                        <Border.Effect>
                            <DropShadowEffect Color="#CCE0F8" BlurRadius="5" ShadowDepth="1" Opacity="1" />
                        </Border.Effect>
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <!--<BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"  Storyboard.TargetProperty="(FrameworkElement.Width)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.0020000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2520000" Value="142"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3450000" Value="120"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.4300000" Value="142"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"  Storyboard.TargetProperty="(FrameworkElement.Height)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.0020000" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2520000" Value="200"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3450000" Value="170"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.4300000" Value="200"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>-->
                            </MultiTrigger.EnterActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style TargetType="{x:Type MenuItem}"  x:Key="MyContextMenuItem" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}" >
                    <Border Margin="0,0,0,1" Padding="10,0,0,0" x:Name="bd"  Background="White"  MinWidth="110" CornerRadius="0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <!--<Rectangle Fill="#99CC66" Height="20" Width="20"/>-->
                            <ContentPresenter Margin="0,10" ContentSource="Header" Grid.Column="1" HorizontalAlignment="Left"/>
                            <Popup x:Name="pop" Margin="10" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Placement="Right">
                                <Border Margin="5" CornerRadius="5" Background="#FFCCCC">
                                    <StackPanel IsItemsHost="True">
                                    </StackPanel>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="bd" Property="Background" Value="#348ded"/>
                            <Setter  Property="Foreground" Value="White"/>
                            <Setter  Property="FontSize" Value="12"/>
                            <Setter TargetName="pop" Property="IsOpen" Value="true"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter  Property="Foreground" Value="#4f5a6f"/>
                            <Setter  Property="FontSize" Value="12"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="pop" Property="IsOpen" Value="false"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="#348ded"/>
                            <Setter TargetName="pop" Property="IsOpen" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabItem_Style1">
        <Style.Triggers>
            <Trigger Property="TabItem.IsSelected" Value="True">
                <!--<Setter Property="TabItem.Template" >
                    <Setter.Value>
                        <ControlTemplate>
                            <Canvas Name="canvas" Background="White" Width="132" >
                                <TextBlock HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               
                                               Text="{TemplateBinding HeaderedContentControl.Header}"
                                               >
                                </TextBlock>
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>-->
                <!--<Setter Property="TabItem.FontWeight" Value="Bold"/>-->
                <Setter Property="TabItem.Foreground" Value="#348ded"/>
                
            </Trigger>
            <Trigger Property="TabItem.IsMouseOver" Value="True">
                <!--<Setter Property="TabItem.FontWeight" Value="Bold"/>-->
                <!--<Setter Property="TabItem.Foreground" Value="#348ded"/>-->
                <!--<Setter Property="TabItem.Template" >
                    <Setter.Value>
                        <ControlTemplate>
                            <Canvas Name="canvas" Background="White">
                                <Label  HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                              
                                               Content="{TemplateBinding HeaderedContentControl.Header}"
                                               >
                                </Label>
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>-->
                <Setter Property="TabItem.Foreground" Value="Blue"/>
                <Setter Property="TabItem.Background" Value="White"/>
            </Trigger>
            <Trigger Property="TabItem.IsFocused" Value="True">
                    <Setter Property="TabItem.Background" Value="Gray"/>
                </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type TabItem}" x:Key="TabItem_Style">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border Name="Border" Margin="0,0,0,0" Background="Transparent" 
                 >
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              ContentSource="Header" Margin="12,2,12,2"
                              RecognizesAccessKey="True">
                               
                            </ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter Property="Foreground" Value="#348ded" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="0,3,0,0" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#348ded" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter Property="Foreground" Value="#7a8bac" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="0,3,0,0" />
                          
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="DarkRed" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
                            <Setter Property="Foreground" Value="DarkGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="ListBoxItem"  x:Key="ListBoxStylechild" >
        <!-- 设置控件模板 -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border  ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Hidden"  Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                 TextBlock.Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- 设置触发器 -->
        <Style.Triggers>
            <!--<MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"></Condition>
                    --><!--<Condition Property="IsSelected" Value="false"></Condition>--><!--
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="#b0dfe5"></Setter>
                </MultiTrigger.Setters>
            </MultiTrigger>

            <Trigger Property="IsFocused" Value="true">
                <Setter Property="Background" Value="#009be1"/>
            </Trigger>-->
        </Style.Triggers>
    </Style>

</ResourceDictionary>